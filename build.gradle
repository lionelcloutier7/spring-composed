buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
		maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework.build.gradle:propdeps-plugin:0.0.7")
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.6.RELEASE"
}

apply plugin: 'propdeps'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'

jar {
    baseName = 'spring-composed'
}

group = 'org.springframework.composed'

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {
    optional("org.springframework.boot:spring-boot-starter-data-jpa")
    optional("org.springframework.boot:spring-boot-starter-jdbc")
    optional("org.springframework.boot:spring-boot-starter-security")
    optional("org.springframework.boot:spring-boot-starter-web")
    optional("org.springframework.boot:spring-boot-starter-test")
}

compileJava {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

javadoc {
	options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
	options.author = true
	options.header = project.name
	options.addStringOption('Xdoclint:none', '-quiet')
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == "org.springframework.boot") {
			details.useVersion springBootVersion
		}
		if (details.requested.group == "org.springframework") {
			details.useVersion springVersion
		}
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}
