buildscript {
    ext {
        springBootVersion = '1.3.0.M5'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
		maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework.build.gradle:propdeps-plugin:0.0.7")
    }
}

plugins {
    id "io.spring.dependency-management" version "0.4.1.RELEASE"
}

apply plugin: 'propdeps'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
// apply plugin: 'spring-boot' 

jar {
    baseName = 'spring-composed'
}

group = 'org.springframework.composed'

ext.springBootVersion      = '1.3.0.M5'
ext.springVersion          = '4.2.1.RELEASE'

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {
    optional("org.springframework.boot:spring-boot-starter-data-jpa")
    optional("org.springframework.boot:spring-boot-starter-jdbc")
    optional("org.springframework.boot:spring-boot-starter-security")
    optional("org.springframework.boot:spring-boot-starter-web")
    optional("org.springframework.boot:spring-boot-starter-test")
}

compileJava {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == "org.springframework.boot") {
			details.useVersion springBootVersion
		}
		if (details.requested.group == "org.springframework") {
			details.useVersion springVersion
		}
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}
